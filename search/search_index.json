{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"CharjaBox Work in progress Ansible based Homeserver setup using Docker. Inspired by Ansible NAS and HomelabOS What is this? In the future this maybe could be a simple solution to quickly deploy a homeserver using Ansible and Docker. At the moment it can share files via SMB and create a Portainer container for managing Docker containers. But this is only the beginning. I will add more information, documentation and features soon Features Samba Sharing Manual container management using Portainer Home Media Streaming with Plex or Jellyfin Your own wiki using Dokuwiki Personal Finance management with Firefly III Local DNS management with BIND Download caching for many CDNs","title":"Home"},{"location":"#charjabox","text":"Work in progress Ansible based Homeserver setup using Docker. Inspired by Ansible NAS and HomelabOS What is this? In the future this maybe could be a simple solution to quickly deploy a homeserver using Ansible and Docker. At the moment it can share files via SMB and create a Portainer container for managing Docker containers. But this is only the beginning. I will add more information, documentation and features soon Features Samba Sharing Manual container management using Portainer Home Media Streaming with Plex or Jellyfin Your own wiki using Dokuwiki Personal Finance management with Firefly III Local DNS management with BIND Download caching for many CDNs","title":"CharjaBox"},{"location":"configuration/","text":"Configuration Configuration is done in multiple files in the settings folder. You should never touch the settings.template folder in normal use. If you use CharjaBox to set up multiple servers, you can use different settings folders for every server. To do this, set different hostnames or groups for your different servers in your Inventory and create host_vars/$HOSTNAME or group_vars/$GROUPNAME files for each server/group. In those files you can set the charjabox_settings_path variable to a path matching the pattern *.settings and create a copy of settings.template in that path. General charjabox_general.yml includes all general configuration about your server, like Hostnames, Timezones, etc. Application Settings Every application has it's own settings file, where you can enable the Application and apply App-specific configuration.","title":"Configuration"},{"location":"configuration/#configuration","text":"Configuration is done in multiple files in the settings folder. You should never touch the settings.template folder in normal use. If you use CharjaBox to set up multiple servers, you can use different settings folders for every server. To do this, set different hostnames or groups for your different servers in your Inventory and create host_vars/$HOSTNAME or group_vars/$GROUPNAME files for each server/group. In those files you can set the charjabox_settings_path variable to a path matching the pattern *.settings and create a copy of settings.template in that path.","title":"Configuration"},{"location":"configuration/#general","text":"charjabox_general.yml includes all general configuration about your server, like Hostnames, Timezones, etc.","title":"General"},{"location":"configuration/#application-settings","text":"Every application has it's own settings file, where you can enable the Application and apply App-specific configuration.","title":"Application Settings"},{"location":"installation/","text":"Installation Make sure all Requirements are met Clone the repository and cd into the directory Copy settings.template to settings and configure everything Create an inventory file and add your server's IP/Hostname/Domain Install needed roles: ansible-galaxy install -r requirements.yml Run the playbook: ansible-playbook -i inventory -u $USER charjabox.yml You can use the script charjabox/scripts/initialize.sh to skip part of steps 3 and 4. This scripts asks you about your server IP, group name and settings folder and creates the files for you automatically. You still need to do it manually if you want to use multiple servers for now. This functionality will be added to the script in the future.","title":"Installation"},{"location":"installation/#installation","text":"Make sure all Requirements are met Clone the repository and cd into the directory Copy settings.template to settings and configure everything Create an inventory file and add your server's IP/Hostname/Domain Install needed roles: ansible-galaxy install -r requirements.yml Run the playbook: ansible-playbook -i inventory -u $USER charjabox.yml You can use the script charjabox/scripts/initialize.sh to skip part of steps 3 and 4. This scripts asks you about your server IP, group name and settings folder and creates the files for you automatically. You still need to do it manually if you want to use multiple servers for now. This functionality will be added to the script in the future.","title":"Installation"},{"location":"requirements/","text":"Requirements Before you set up CharjaBox, make sure you have the following: A running Ubuntu 18.04 server, preferably a clean installation A user on that server with sudo access and a working SSH public key The corresponding SSH private key on your local machine","title":"Requirements"},{"location":"requirements/#requirements","text":"Before you set up CharjaBox, make sure you have the following: A running Ubuntu 18.04 server, preferably a clean installation A user on that server with sudo access and a working SSH public key The corresponding SSH private key on your local machine","title":"Requirements"},{"location":"applications/bind/","text":"BIND BIND - Domain Name Server for your home network Please note that BIND requires some additional setup after installing. For reference you can use the second half of this tutorial and the BIND documentation . The docker container used for BIND comes with an instance of Webmin to make management of your DNS easier. You can disable this by setting bind_webmin_enabled to \"false\" . BIND has to run on port 53 for DNS to work. The Webinterface port can be set by changing bind_webmin_port .","title":"BIND"},{"location":"applications/bind/#bind","text":"BIND - Domain Name Server for your home network Please note that BIND requires some additional setup after installing. For reference you can use the second half of this tutorial and the BIND documentation . The docker container used for BIND comes with an instance of Webmin to make management of your DNS easier. You can disable this by setting bind_webmin_enabled to \"false\" . BIND has to run on port 53 for DNS to work. The Webinterface port can be set by changing bind_webmin_port .","title":"BIND"},{"location":"applications/dokuwiki/","text":"Dokuwiki Dokuwiki - Simple to use and highly versatile Open Source wiki software that doesn't require a database Upon first install go to http://$IP:$PORT/install.php . Once you have completed the setup, restart the container, login as admin and set \"Use nice URLs\" in the admin/Configuration Settings panel to .htaccess and tick Use slash as namespace separator in URLs to enable nice URLs. You will find the webui at http://$IP:$PORT/ , for more info see Dokuwiki . This explanation was copied from the Linuxserver.io page for Dokuwiki .","title":"Dokuwiki"},{"location":"applications/dokuwiki/#dokuwiki","text":"Dokuwiki - Simple to use and highly versatile Open Source wiki software that doesn't require a database Upon first install go to http://$IP:$PORT/install.php . Once you have completed the setup, restart the container, login as admin and set \"Use nice URLs\" in the admin/Configuration Settings panel to .htaccess and tick Use slash as namespace separator in URLs to enable nice URLs. You will find the webui at http://$IP:$PORT/ , for more info see Dokuwiki . This explanation was copied from the Linuxserver.io page for Dokuwiki .","title":"Dokuwiki"},{"location":"applications/lancache/","text":"Lancache Lancache - Cache your video game downloads and operating system updates so you only have to download them once If you do not run your own DNS server, you can set lancache_dns_enabled to true and use the integrated DNS server. You can also use the variables lancache_limits_memory , lancache_limits_size , lancache_limits_age to set the caches memory use, maximum disk space use and maximum age for cached files respectively. If you run your own DNS server, you can get all the domains for the supported CDNs from here . Redirect those to your CharjaBox IP (and set up a reverse proxy for those domains if not using port 80). A simple example setup using BIND and Nginx with the Cache running on 192.168.1.22 on port 6666 could look like this: BIND db.rpz: TTL 60 @ IN SOA localhost. root.localhost. ( 2015112501 ; serial 1h ; refresh 30m ; retry 1w ; expiry 30m) ; minimum IN NS localhost. localhost A 127.0.0.1 *.content.steampowered.com A 192.168.1.22 content1.steampowered.com A 192.168.1.22 content2.steampowered.com A 192.168.1.22 content3.steampowered.com A 192.168.1.22 content4.steampowered.com A 192.168.1.22 content5.steampowered.com A 192.168.1.22 content6.steampowered.com A 192.168.1.22 content7.steampowered.com A 192.168.1.22 content8.steampowered.com A 192.168.1.22 cs.steampowered.com A 192.168.1.22 steamcontent.com A 192.168.1.22 client-download.steampowered.com A 192.168.1.22 *.hsar.steampowered.com.edgesuite.net A 192.168.1.22 *.akamai.steamstatic.com A 192.168.1.22 content-origin.steampowered.com A 192.168.1.22 clientconfig.akamai.steamtransparent.com A 192.168.1.22 steampipe.akamaized.net A 192.168.1.22 edgecast.steamstatic.com A 192.168.1.22 steam.apac.qtlglb.com.mwcloudcdn.com A 192.168.1.22 *.cs.steampowered.com A 192.168.1.22 *.cm.steampowered.com A 192.168.1.22 *.edgecast.steamstatic.com A 192.168.1.22 *.steamcontent.com A 192.168.1.22 cdn1-sea1.valve.net A 192.168.1.22 cdn2-sea1.valve.net A 192.168.1.22 *.steam-content-dnld-1.apac-1-cdn.cqloud.com A 192.168.1.22 *.steam-content-dnld-1.eu-c1-cdn.cqloud.com A 192.168.1.22 steam.apac.qtlglb.com A 192.168.1.22 edge.steam-dns.top.comcast.net A 192.168.1.22 edge.steam-dns-2.top.comcast.net A 192.168.1.22 steam.naeu.qtlglb.com A 192.168.1.22 steampipe-kr.akamaized.net A 192.168.1.22 steam.ix.asn.au A 192.168.1.22 steam.eca.qtlglb.com A 192.168.1.22 steam.cdn.on.net A 192.168.1.22 update5.dota2.wmsj.cn A 192.168.1.22 update2.dota2.wmsj.cn A 192.168.1.22 update6.dota2.wmsj.cn A 192.168.1.22 update3.dota2.wmsj.cn A 192.168.1.22 update1.dota2.wmsj.cn A 192.168.1.22 update4.dota2.wmsj.cn A 192.168.1.22 update5.csgo.wmsj.cn A 192.168.1.22 update2.csgo.wmsj.cn A 192.168.1.22 update4.csgo.wmsj.cn A 192.168.1.22 update3.csgo.wmsj.cn A 192.168.1.22 update6.csgo.wmsj.cn A 192.168.1.22 update1.csgo.wmsj.cn A 192.168.1.22 st.dl.bscstorage.net A 192.168.1.22 cdn.mileweb.cs.steampowered.com.8686c.com A 192.168.1.22 Nginx site config: server { listen 80; listen 443; server_name *.content.steampowered.com content1.steampowered.com content2.steampowered.com content3.steampowered.com content4.steampowered.com content5.steampowered.com content6.steampowered.com content7.steampowered.com content8.steampowered.com cs.steampowered.com steamcontent.com client-download.steampowered.com *.hsar.steampowered.com.edgesuite.net *.akamai.steamstatic.com content-origin.steampowered.com clientconfig.akamai.steamtransparent.com steampipe.akamaized.net edgecast.steamstatic.com steam.apac.qtlglb.com.mwcloudcdn.com *.cs.steampowered.com *.cm.steampowered.com *.edgecast.steamstatic.com *.steamcontent.com cdn1-sea1.valve.net cdn2-sea1.valve.net *.steam-content-dnld-1.apac-1-cdn.cqloud.com *.steam-content-dnld-1.eu-c1-cdn.cqloud.com steam.apac.qtlglb.com edge.steam-dns.top.comcast.net edge.steam-dns-2.top.comcast.net steam.naeu.qtlglb.com steampipe-kr.akamaized.net steam.ix.asn.au steam.eca.qtlglb.com steam.cdn.on.net update5.dota2.wmsj.cn update2.dota2.wmsj.cn update6.dota2.wmsj.cn update3.dota2.wmsj.cn update1.dota2.wmsj.cn update4.dota2.wmsj.cn update5.csgo.wmsj.cn update2.csgo.wmsj.cn update4.csgo.wmsj.cn update3.csgo.wmsj.cn update6.csgo.wmsj.cn update1.csgo.wmsj.cn st.dl.bscstorage.net cdn.mileweb.cs.steampowered.com.8686c.com; location / { include proxy_params; proxy_pass http://192.168.1.22:6666; } }","title":"Lancache"},{"location":"applications/lancache/#lancache","text":"Lancache - Cache your video game downloads and operating system updates so you only have to download them once If you do not run your own DNS server, you can set lancache_dns_enabled to true and use the integrated DNS server. You can also use the variables lancache_limits_memory , lancache_limits_size , lancache_limits_age to set the caches memory use, maximum disk space use and maximum age for cached files respectively. If you run your own DNS server, you can get all the domains for the supported CDNs from here . Redirect those to your CharjaBox IP (and set up a reverse proxy for those domains if not using port 80). A simple example setup using BIND and Nginx with the Cache running on 192.168.1.22 on port 6666 could look like this: BIND db.rpz: TTL 60 @ IN SOA localhost. root.localhost. ( 2015112501 ; serial 1h ; refresh 30m ; retry 1w ; expiry 30m) ; minimum IN NS localhost. localhost A 127.0.0.1 *.content.steampowered.com A 192.168.1.22 content1.steampowered.com A 192.168.1.22 content2.steampowered.com A 192.168.1.22 content3.steampowered.com A 192.168.1.22 content4.steampowered.com A 192.168.1.22 content5.steampowered.com A 192.168.1.22 content6.steampowered.com A 192.168.1.22 content7.steampowered.com A 192.168.1.22 content8.steampowered.com A 192.168.1.22 cs.steampowered.com A 192.168.1.22 steamcontent.com A 192.168.1.22 client-download.steampowered.com A 192.168.1.22 *.hsar.steampowered.com.edgesuite.net A 192.168.1.22 *.akamai.steamstatic.com A 192.168.1.22 content-origin.steampowered.com A 192.168.1.22 clientconfig.akamai.steamtransparent.com A 192.168.1.22 steampipe.akamaized.net A 192.168.1.22 edgecast.steamstatic.com A 192.168.1.22 steam.apac.qtlglb.com.mwcloudcdn.com A 192.168.1.22 *.cs.steampowered.com A 192.168.1.22 *.cm.steampowered.com A 192.168.1.22 *.edgecast.steamstatic.com A 192.168.1.22 *.steamcontent.com A 192.168.1.22 cdn1-sea1.valve.net A 192.168.1.22 cdn2-sea1.valve.net A 192.168.1.22 *.steam-content-dnld-1.apac-1-cdn.cqloud.com A 192.168.1.22 *.steam-content-dnld-1.eu-c1-cdn.cqloud.com A 192.168.1.22 steam.apac.qtlglb.com A 192.168.1.22 edge.steam-dns.top.comcast.net A 192.168.1.22 edge.steam-dns-2.top.comcast.net A 192.168.1.22 steam.naeu.qtlglb.com A 192.168.1.22 steampipe-kr.akamaized.net A 192.168.1.22 steam.ix.asn.au A 192.168.1.22 steam.eca.qtlglb.com A 192.168.1.22 steam.cdn.on.net A 192.168.1.22 update5.dota2.wmsj.cn A 192.168.1.22 update2.dota2.wmsj.cn A 192.168.1.22 update6.dota2.wmsj.cn A 192.168.1.22 update3.dota2.wmsj.cn A 192.168.1.22 update1.dota2.wmsj.cn A 192.168.1.22 update4.dota2.wmsj.cn A 192.168.1.22 update5.csgo.wmsj.cn A 192.168.1.22 update2.csgo.wmsj.cn A 192.168.1.22 update4.csgo.wmsj.cn A 192.168.1.22 update3.csgo.wmsj.cn A 192.168.1.22 update6.csgo.wmsj.cn A 192.168.1.22 update1.csgo.wmsj.cn A 192.168.1.22 st.dl.bscstorage.net A 192.168.1.22 cdn.mileweb.cs.steampowered.com.8686c.com A 192.168.1.22 Nginx site config: server { listen 80; listen 443; server_name *.content.steampowered.com content1.steampowered.com content2.steampowered.com content3.steampowered.com content4.steampowered.com content5.steampowered.com content6.steampowered.com content7.steampowered.com content8.steampowered.com cs.steampowered.com steamcontent.com client-download.steampowered.com *.hsar.steampowered.com.edgesuite.net *.akamai.steamstatic.com content-origin.steampowered.com clientconfig.akamai.steamtransparent.com steampipe.akamaized.net edgecast.steamstatic.com steam.apac.qtlglb.com.mwcloudcdn.com *.cs.steampowered.com *.cm.steampowered.com *.edgecast.steamstatic.com *.steamcontent.com cdn1-sea1.valve.net cdn2-sea1.valve.net *.steam-content-dnld-1.apac-1-cdn.cqloud.com *.steam-content-dnld-1.eu-c1-cdn.cqloud.com steam.apac.qtlglb.com edge.steam-dns.top.comcast.net edge.steam-dns-2.top.comcast.net steam.naeu.qtlglb.com steampipe-kr.akamaized.net steam.ix.asn.au steam.eca.qtlglb.com steam.cdn.on.net update5.dota2.wmsj.cn update2.dota2.wmsj.cn update6.dota2.wmsj.cn update3.dota2.wmsj.cn update1.dota2.wmsj.cn update4.dota2.wmsj.cn update5.csgo.wmsj.cn update2.csgo.wmsj.cn update4.csgo.wmsj.cn update3.csgo.wmsj.cn update6.csgo.wmsj.cn update1.csgo.wmsj.cn st.dl.bscstorage.net cdn.mileweb.cs.steampowered.com.8686c.com; location / { include proxy_params; proxy_pass http://192.168.1.22:6666; } }","title":"Lancache"},{"location":"applications/nginx/","text":"Nginx Nginx - Open source web server and a reverse proxy server nginx_config_directory binds to /etc/nginx , for information on how to configure nginx see the nginx documentation . nginx_data_directory binds to /var/www/ , put everything the webserver should serve in here. For information on how to setup nginx as a reverse proxy for your other apps, see this documentation page .","title":"Nginx"},{"location":"applications/nginx/#nginx","text":"Nginx - Open source web server and a reverse proxy server nginx_config_directory binds to /etc/nginx , for information on how to configure nginx see the nginx documentation . nginx_data_directory binds to /var/www/ , put everything the webserver should serve in here. For information on how to setup nginx as a reverse proxy for your other apps, see this documentation page .","title":"Nginx"},{"location":"applications/plex/","text":"Plex Plex - Your very own personal streaming service You can set the paths to your media folders in the variables plex_music_directory , plex_tv_directory , and plex_movies_directory . To automatically add your server to your account, generate a claim token here and insert that token into the plex_token variable. Please note that the claim token expires after 5 minutes, so generate it right before running the playbook. After the server is set up you can visit the Plex webinterface via the official Plex website or port 32400 on your server. Changing the port for Plex can lead to some difficulties with the apps, so it is not encouraged to do that. Once you are on the webinterface, you can do your first time setup and let Plex scan through your media files.","title":"Plex"},{"location":"applications/plex/#plex","text":"Plex - Your very own personal streaming service You can set the paths to your media folders in the variables plex_music_directory , plex_tv_directory , and plex_movies_directory . To automatically add your server to your account, generate a claim token here and insert that token into the plex_token variable. Please note that the claim token expires after 5 minutes, so generate it right before running the playbook. After the server is set up you can visit the Plex webinterface via the official Plex website or port 32400 on your server. Changing the port for Plex can lead to some difficulties with the apps, so it is not encouraged to do that. Once you are on the webinterface, you can do your first time setup and let Plex scan through your media files.","title":"Plex"},{"location":"applications/portainer/","text":"Portainer - Web Interface for managing Docker containers","title":"Portainer"}]}