---
version: '3'

services:
  sonarr:
    image: linuxserver/sonarr:{{ sonarr_tag }}
    container_name: Sonarr
    restart: unless-stopped
    ports:
      - {{ sonarr_port }}:8989
{% if sonarr_additional_ports %}
{% for port in sonarr_additional_ports %}
      - {{ port }}
{% endfor %}
{% endif %}
    volumes:
      - {{ sonarr_directories.config }}:/config
      - {{ sonarr_directories.data }}:/downloads
      - {{ charjabox_tv_directory }}:/tv
{% if sonarr_additional_volumes %}
{% for volume in sonarr_additional_volumes %}
      - {{ volume }}
{% endfor %}
{% endif %}
{% if sonarr_additional_env %}
    environment:
{% for env in sonarr_additional_env %}
      {{ env }}
{% endfor %}
{% endif %}
    labels:
      traefik.enable: "{{ sonarr_traefik_enabled }}"
      traefik.http.routers.sonarr.entrypoints: "web"
      traefik.http.routers.sonarr.rule: "Host(`{{ sonarr_domain }}`)"
      traefik.http.routers.sonarr-s.entrypoints: "web-secure"
      traefik.http.routers.sonarr-s.rule: "Host(`{{ sonarr_domain }}`)"
      traefik.http.routers.sonarr-s.tls: "true"
{% if traefik_letsencrypt_enabled %}
      traefik.http.routers.sonarr-s.tls.certresolver: "le"
{% endif %}
      traefik.http.services.sonarr.loadbalancer.server.port: "8989"
{% if sonarr_additional_labels %}
{% for label in sonarr_additional_labels %}
      {{ label }}
{% endfor %}
{% endif %}
